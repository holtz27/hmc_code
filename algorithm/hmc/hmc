// ############################## hmc function one proposal

  List hmc_one(double eps, int min_L, int max_L, vec theta_init, 
               List param, num_ptr fun1, vec_ptr fun2){
    
    int acc = 0, dim = theta_init.n_elem; 
    double h; 
    vec mean(dim, fill::zeros), theta_current = theta_init, p_current;
    mat M(dim, dim, fill::eye), inv_M = M.i(), Proposal(dim, 2);
    
    //(i) gerando p_current e u
    p_current = mvnrnd(mean, M);
    
    //(ii) Leapfrog
    int L = randi( distr_param( min_L, max_L ) );
    Proposal = lf(eps, L, theta_current, p_current, inv_M, param, fun2);
    
    // (iii) Calculando H's
    h = H_hmc(theta_current, p_current, param, inv_M, fun1);
    h -= H_hmc(Proposal.col(0), Proposal.col(1), param, inv_M, fun1);
    
    //(iv) Prop aceitação
    if( R::runif(0, 1) < std::min( 1.0, exp(h) ) ){
      //chain.col(i) = Proposal.col(0);
      theta_current = Proposal.col(0);
      acc += 1;
    }
    
    return List::create(Named("theta_current") = theta_current, 
                        Named("acc") = acc);
  }
